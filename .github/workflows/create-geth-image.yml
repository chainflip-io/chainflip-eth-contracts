name: Create Geth Image
on:
  push:
    tags:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/geth-base
          flavor: |
            latest=true
          tags: |
            type=semver,pattern={{raw}}
            type=raw,value=latest

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ci/docker/geth/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  create:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        suffix: ["1-node", "3-node"]
    needs:
      - build
    services:
      geth:
        image: ghcr.io/${{ github.repository }}/geth-base:latest
        ports:
          - 8545:8545
          - 8546:8546
          - 8551:8551
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.7"

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Cache Packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('./poetry.lock') }}

      - name: Install node dependencies
        run: npm install

      - name: Install brownie
        run: pip3 install eth-brownie

      - name: Install poetry dependencies
        run: poetry install

      - name: Add the network
        run: poetry run brownie networks add Ethereum docker host=http://localhost:8545 chainid=10997

      - name: Deploy contracts
        env:
          SEED: test test test test test test test test test test test junk
        run: export $(cat ci/docker/geth/${{ matrix.suffix }}.env | xargs) && poetry run brownie run deploy_contracts --network docker

      - name: Commit and push new geth image
        run: |
          CONTAINER=$(docker ps --format '{{.Names}}' | grep geth)
          docker commit $CONTAINER ghcr.io/chainflip-io/chainflip-eth-contracts/geth:${{ github.ref_name }}-${{ matrix.suffix }}
          docker push ghcr.io/chainflip-io/chainflip-eth-contracts/geth:${{ github.ref_name }}-${{ matrix.suffix }}
      - name: Summary
        run: |
          mkdir -p .scripts/.artefacts
          touch .scripts/.artefacts/docker.json
          CONTRACTS=$(jq . .scripts/.artefacts/docker.json)
          echo "## Deployed Contracts for \`${{ matrix.suffix }}\`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
          echo "$CONTRACTS" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "## Docker Image" >> $GITHUB_STEP_SUMMARY
          echo "\`ghcr.io/chainflip-io/chainflip-eth-contracts/geth:${{ github.ref_name }}-${{ matrix.suffix }}\`"